#LV2 이모티콘 할인

#1차시도 (실패)
import itertools
def solution(users, emoticons):
    discounts = [0.9, 0.8, 0.7, 0.6]
    t = []
    for emoticon in emoticons:
        i = emoticon
        t.append([])
        for dis in discounts:
            t[-1].append(int(emoticon * dis))

    l = list(itertools.product([0,1,2,3], repeat=len(t)))
    max = [0, 0]
    for indexs in l:
        arr = [t[i][indexs[i]] for i in range(len(t))]
        per = [i+1 for i in indexs]

        plus = sum = 0
        for data in users:
            s = 0
            for i in range(len(arr)):
                if data[0]/10 <= per[i]:
                    s+= arr[i]
            if s >= data[1]:
                plus += 1
                s=0
            sum += s
        if max[0] < plus:
            max = [plus, sum]
        elif max[0] == plus and max[1] <= sum:
            max = [plus, sum]
    return max
3개의 데이터 케이스에서 실패했다. 예외가 발생할수 있는 곳이 존재하는 것 같다.

#2차시도 (성공)
import itertools
def solution(users, emoticons):
    discounts = [90, 80, 70, 60]
    t = []
    for emoticon in emoticons:
        i = emoticon
        t.append([])
        for dis in discounts:
            t[-1].append((emoticon * dis)//100)

    max = [0, 0]
    for indexs in itertools.product([0,1,2,3], repeat=len(t)):
        arr = [t[i][indexs[i]] for i in range(len(t))]
        per = [i+1 for i in indexs]

        plus = sum = 0
        for data in users:
            s = 0
            for i in range(len(arr)):
                if data[0]/10 <= per[i]:
                    s+= arr[i]
            if s >= data[1]:
                plus += 1
                s=0
            sum += s
        if max[0] < plus:
            max = [plus, sum]
        elif max[0] == plus and max[1] <= sum:
            max = [plus, sum]
    return max
나눗셈을 하는 과정에서 부동소수점으로 인한 오류가 발생했던 문제 였음